
<%= stylesheet_link_tag "task_details/show", :media => "all" %>

<div class="container">
  <div class="row">
    <% if @task.task_detail.deadline.present? %>
      <h2><%= link_to @task.title, task_group_path(@task.task_group) %></h2>
      <h3><%= @task.task_detail.deadline.strftime("%Y.%m.%d") %></h3>
    <% else %>
      <h2 class="headline2"><%= link_to @task.title, task_group_path(@task.task_group) %></h2>
    <% end %>
    <div id="countDownWrap">
      <% min = @task.task_detail.time_limit/60%60 %>
      <% sec = @task.task_detail.time_limit%60 %>
      <div class="countDown">
        <span id="countDown_hr"><%= @task.task_detail.time_limit/3600 %></span>：
        <span id="countDown_min"><% if min.to_s.length <= 1 %>0<%= min %><% else %><%= min %><% end %></span>：
        <span id="countDown_sec"><% if sec.to_s.length <= 1 %>0<%= sec %><% else %><%= sec %><% end %></span>
      </div>
    </div>
    <form name="timer">
      <input type="hidden" value="<%= @task.task_detail.time_limit/3600 %>">
      <input type="hidden" value="<%= @task.task_detail.time_limit/60%60 %>">
      <input type="hidden" value="<%= @task.task_detail.time_limit%60 %>"><br>
      <input type="hidden" value="スタート" >
      <input type="hidden" value="ストップ" >
      <ul class="btn-area">
        <li id="startBtn">
          <button type="button" onclick="cntStart()" class="start-btn time-btn">スタート</button></li>
        <li id="stopBtn">
          <button type="button" onclick="cntStop()" class="stop-btn time-btn">ストップ</button></li>
        <li id="sound" class="hide">
          <button type="button" class="stop-btn time-btn">ストップ</button></li>
      </ul>
    </form>
  </div>
</div>

<%= form_tag update_limit_path(@task), :method => 'patch', id: "update_time_limit" do %>
    <input type="hidden" id="update_limit" name="update_limit" />
<% end %>

<script>

$( document ).ready(function() {
  $(".stop-btn").prop("disabled", true);
});

var timer1; //タイマーを格納する変数（タイマーID）の宣言

//カウントダウン関数を1000ミリ秒毎に呼び出す関数
function cntStart()
{
  document.timer.elements[3].disabled=true;
  $(".start-btn").prop("disabled", true);
  $(".stop-btn").prop("disabled", false);
    audioElem = new Audio();
    audioElem.src = "/assets/decision3-b93ac9ca0d5716ec841bc30a509e68048195f2252ef443832c7fce49afa0da1f.mp3";
    audioElem.play();
  timer1=setInterval("countDown()",1000);
}

//タイマー停止関数
function cntStop()
{
  document.timer.elements[3].disabled=false;
  $(".start-btn").prop("disabled", false);
  $(".stop-btn").prop("disabled", true);
    audioElem = new Audio();
    audioElem.src = "/assets/decision3-b93ac9ca0d5716ec841bc30a509e68048195f2252ef443832c7fce49afa0da1f.mp3";
    audioElem.play();
  clearInterval(timer1);
  var hr=document.timer.elements[0].value;
      hr=parseInt(hr);
  var min=document.timer.elements[1].value;
      min=parseInt(min);
  var sec=document.timer.elements[2].value;
      sec=parseInt(sec);
  $("#update_limit").val(hr*3600+min*60+sec);
  $("#update_time_limit").submit();
}

//カウントダウン関数
function countDown()
{
  var hr=document.timer.elements[0].value;
  var min=document.timer.elements[1].value;
  var sec=document.timer.elements[2].value;

  if( (min=="") && (sec=="") )
  {
    alert("時刻を設定してください！");
    reSet();
  }
  else
  {
    if (hr=="") hr=0;
    hr=parseInt(hr);

    if (min=="") min=0;
    min=parseInt(min);

    if (sec=="") sec=0;
    sec=parseInt(sec);

    tmWrite(hr*3600+min*60+sec-1);
  }
}

//残り時間を書き出す関数
function tmWrite(int)
{
  int=parseInt(int);

  if (int<=0)
  {
    reSet();
    $("#countDown_sec").text("00");
      audioElem = new Audio();
      audioElem.loop = true;
      audioElem.src = "/assets/warning1-ff1c16910dc5c2c2172d7f18073838daa230fadf9b38a4136cf8ec121fff32e1.mp3";
      audioElem.play();
    $("#startBtn").addClass("hide");
    $("#stopBtn").addClass("hide");
    $("#sound").removeClass("hide");
  }
  else
  {
    document.timer.elements[0].value = Math.floor(int/3600);
    //残り分数はintを60で割って切り捨てる
    document.timer.elements[1].value=Math.floor(int/60%60);
    //残り秒数はintを60で割った余り
    document.timer.elements[2].value=int % 60;
    $("#countDown_hr").text(Math.floor(int/3600));

    if (String(Math.floor(int/60%60)).length<=1) {
      $("#countDown_min").text("0"+Math.floor(int/60%60));
    } else {
      $("#countDown_min").text(Math.floor(int/60%60));
    }
    if (String((int%60)).length<=1) {
      $("#countDown_sec").text("0"+(int%60));
    } else {
      $("#countDown_sec").text((int%60));
    }
  }
}

//フォームを初期状態に戻す（リセット）関数
function reSet()
{
  document.timer.elements[0].value="0";
  document.timer.elements[1].value="0";
  document.timer.elements[2].value="0";
  document.timer.elements[3].disabled=false;
  clearInterval(timer1);
}
$(function(){
  $("#sound").click(function(){
    $("#update_limit").val(0);
    $("#update_time_limit").submit();
  });
});
</script>